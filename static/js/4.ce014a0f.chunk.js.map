{"version":3,"sources":["component/MovieDetailsPage/MovieDetailsPage.js"],"names":["Cast","lazy","Reviews","withRouter","props","currentMovie","original_title","poster_path","popularity","overview","genres","getMovieReviews","id","getMovieCast","cast","history","reviews","onClick","push","src","alt","map","elem","key","name","to","fallback","type","color","height","width","timeout","path","render"],"mappings":"2FAAA,0DAQMA,GARN,MAQaC,gBAAK,kBAAM,iCAElBC,EAAUD,gBAAK,kBAAM,gCAqEZE,uBAnEU,SAAAC,GAAU,IAAD,EAQ5BA,EAAMC,aANRC,EAF8B,EAE9BA,eACAC,EAH8B,EAG9BA,YACAC,EAJ8B,EAI9BA,WACAC,EAL8B,EAK9BA,SAL8B,IAM9BC,cAN8B,MAMrB,GANqB,EASxBC,GATwB,EAO9BC,GAEgER,EAA1DO,iBAAiBE,EAAyCT,EAAzCS,aAAcC,EAA2BV,EAA3BU,KAAMC,EAAqBX,EAArBW,QAASC,EAAYZ,EAAZY,QACtD,OACE,6BACE,6BACE,4BAAQC,QAAS,kBAAMF,EAAQG,KAAK,OAApC,WACA,yBACEC,IAAG,yCAAoCZ,GACvCa,IAAKd,IAEP,4BAAKA,GACL,2BAAIE,GACJ,wCACA,2BAAIC,GACJ,sCACA,4BACGC,EAAOW,KAAI,SAAAC,GAAI,OACd,wBAAIC,IAAKD,EAAKV,IAAKU,EAAKE,WAI9B,6BACE,kBAAC,IAAD,CAAMP,QAASJ,EAAcY,GAAG,yBAAhC,QAGA,6BACA,kBAAC,IAAD,CAAMR,QAASN,EAAiBc,GAAG,4BAAnC,YAIF,6BACE,kBAAC,WAAD,CACEC,SACE,kBAAC,IAAD,CACEC,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,OAIb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,wBACLC,OAAQ,kBAAM,kBAACjC,EAAD,CAAMc,KAAMA,OAG5B,kBAAC,IAAD,CACEkB,KAAK,2BACLC,OAAQ,kBAAM,kBAAC/B,EAAD,CAASc,QAASA","file":"static/js/4.ce014a0f.chunk.js","sourcesContent":["import React, { Suspense, lazy } from \"react\";\nimport { Route, withRouter, Link, Switch } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n// import Cast from \"./Cast/Cast\";\n\n// import Reviews from \"./Reviews/Reviews\";\n\nconst Cast = lazy(() => import(\"./Cast/Cast\"));\n\nconst Reviews = lazy(() => import(\"./Reviews/Reviews\"));\n\nconst MovieDetailsPage = props => {\n  const {\n    original_title,\n    poster_path,\n    popularity,\n    overview,\n    genres = [],\n    id\n  } = props.currentMovie;\n  const { getMovieReviews, getMovieCast, cast, history, reviews } = props;\n  return (\n    <div>\n      <div>\n        <button onClick={() => history.push(\"/\")}>back to</button>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={original_title}\n        />\n        <h2>{original_title}</h2>\n        <p>{popularity}</p>\n        <h3>overview</h3>\n        <p>{overview}</p>\n        <h3>genres</h3>\n        <ul>\n          {genres.map(elem => (\n            <li key={elem.id}>{elem.name}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <Link onClick={getMovieCast} to=\"/movies/:movieId/cast\">\n          Cast\n        </Link>\n        <br />\n        <Link onClick={getMovieReviews} to=\"/movies/:movieId/reviews\">\n          Reviews\n        </Link>\n      </div>\n      <div>\n        <Suspense\n          fallback={\n            <Loader\n              type=\"Puff\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000} //3 secs\n            />\n          }\n        >\n          <Switch>\n            <Route\n              path=\"/movies/:movieId/cast\"\n              render={() => <Cast cast={cast} />}\n            />\n\n            <Route\n              path=\"/movies/:movieId/reviews\"\n              render={() => <Reviews reviews={reviews} />}\n            />\n          </Switch>\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(MovieDetailsPage);\n"],"sourceRoot":""}